name: GKE Deployment

on:
  push:
    branches: [main]

env:
  PROJECT_ID: my-app-458011
  CLUSTER_NAME: app-cluster-02-public
  ZONE: us-central1-a # or REGION for regional clusters
  VPC_NETWORK: main-vpc

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Authenticate to GCP
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Set up gcloud CLI
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'kubectl'

      - name: Install gke-gcloud-auth-plugin
        run: |
            sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin

      # Connect to cluster in your VPC
      - name: Configure kubectl
        run: |-
          gcloud container clusters get-credentials $CLUSTER_NAME \
            --zone $ZONE \
            --project $PROJECT_ID \

      # Auth Docker to Artifact Registry
      - name: Setup Gcloud and Docker auth
        run: |-
          gcloud --quiet components update
          gcloud auth configure-docker us-docker.pkg.dev --quiet

      # Build and push to GCR (using your VPC network)
      - name: Build and Push
        run: |-
          docker build \
            -t us-docker.pkg.dev/$PROJECT_ID/my-repo/flask-app:dumm-app .
          docker push us-docker.pkg.dev/$PROJECT_ID/my-repo/flask-app:dumm-app
      # Deploy with VPC-native networking
      - name: Deploy
        run: |-
          kubectl apply -f k8s/
          kubectl rollout status deployment/flask-app
          kubectl get svc -o wide
